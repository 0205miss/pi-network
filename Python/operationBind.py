#  pay 10.25 Pi
from stellar_sdk import Server, Keypair, TransactionBuilder, Network
from mnemonic import Mnemonic
from keyfunc import account_keypair
my_seed_phrase = '' #you should add your secret key here(passphrase)
my_passphrase = '' 
my_language = 'english' # or other language listed in
                            # https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md
mnemo = Mnemonic(my_language)
if mnemo.check(my_seed_phrase):
# my_seed_phrase is a valid BIP39 phrase for my_language   
    binary_seed = Mnemonic.to_seed(my_seed_phrase, my_passphrase)
account_number = 0 # an small unsigned integer (0 for the primary account)
kp = account_keypair(binary_seed, account_number)
source_keypair = Keypair.from_secret(kp.seed().decode())
print(kp.seed().decode()) #it will show your original stellar key Like SXXX....
des_address = "GCSXRBF3YP4NVB7XP2C35O6TWYUQTARNVYR5U6S2JI7RJFWP5JXC5XTY" #destination address
server = Server("https://api.testnet.minepi.com/") #YOU CAN CHANGE TO 127.0.0.1:31401 if your node is running well
for i in range(1,200):    # how many time you want to submit (According to sequence in stellar you can only submit 1 tx per 1 block if you use this kind of for loop)
    source_account = server.load_account(source_keypair.public_key) #load account and sequence
    base_fee = server.fetch_base_fee() 
    transaction = (
        TransactionBuilder(
            source_account=source_account,
            network_passphrase="Pi Testnet",
            base_fee=base_fee,
        )
        .add_text_memo("Play By Pionner:0205miss") #add memo to let everyone know who is playing
        .append_payment_op(des_address, "0.0000001", "XLM") #Because we are using stellar sdk, the native asset is XLM
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .append_payment_op(des_address, "0.0000001", "XLM")
        .build()
    )
    transaction.sign(source_keypair)
    response = server.submit_transaction(transaction)
print("close")
